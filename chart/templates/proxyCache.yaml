apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.name }}-proxy-cache-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
kind: Service
apiVersion: v1
metadata:
  name: {{ .Values.name }}-proxy-cache
spec:
  selector:
    app: {{ .Values.name }}-proxy-cache
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}-proxy-cache
  labels:
    app: {{ .Values.name }}-proxy-cache
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
  selector:
    matchLabels:
      app: {{ .Values.name }}-proxy-cache
  template:
    metadata:
      labels:
        app: {{ .Values.name }}-proxy-cache
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - {{ .Values.name }}-proxy-cache
                topologyKey: 'kubernetes.io/hostname'
      containers:
        - name: {{ .Values.name }}-proxy-cache
          image: {{ .Values.proxyCacheImage }}
          resources:
            requests:
              memory: '256Mi'
              cpu: '50m'
            limits:
              memory: '1024Mi'
              cpu: '500m'
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          volumesMounts:
            - name: proxy-cache-pvc
              mountPath: /data/nginx/cache
      volumes:
        - name: proxy-cache-pvc
          persistentVolumeClaim:
            claimName: {{ .Values.name }}-proxy-cache-pvc