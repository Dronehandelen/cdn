apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  labels:
    app: {{ .Values.name }}
  annotations:
    checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
  selector:
    matchLabels:
      app: {{ .Values.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - {{ .Values.name }}
                topologyKey: 'kubernetes.io/hostname'
      containers:
        - name: {{ .Values.name }}
          image: {{ .Values.image }}
          env:
            - name: CONTAINER_NAME
              value: {{ .Values.name }}
            - name: NODE_ENV
              value: 'production'
            - name: CONFIG_IMAGE_STORAGE
              value: {{ .Values.config.bucket.storage }}
            - name: CONFIG_APP_PUBLIC_URL
              valueFrom:
                configMapKeyRef:
                  name: url-config
                  key: cdnUrl
            - name: CONFIG_DB_USER
              valueFrom:
                configMapKeyRef:
                  name: cdn-config
                  key: dbUser
            - name: CONFIG_DB_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: cdn-config
                  key: dbPassword
            - name: CONFIG_DB_HOST
              value: "127.0.0.1"
            - name: CONFIG_APP_PORT
              value: {{ .Values.port | quote }}
          ports:
            - name: http
              containerPort: {{ .Values.port }}
              protocol: TCP
          volumeMounts:
            - name: cdn-config
              mountPath: /secrets/google/credentials.json
              readOnly: true
              subPath: credentials.json
          resources:
            requests:
              memory: '256Mi'
              cpu: '50m'
            limits:
              memory: '1024Mi'
              cpu: '500m'
          livenessProbe:
            httpGet:
              path: /_ah/health?probe=liveness
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /_ah/health?probe=readiness
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 5

        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.19.1
          command:
            [
              '/cloud_sql_proxy',
              '-instances=norfpv:europe-north1:norfpv-postgres=tcp:5432',
              '-credential_file=/secrets/google/credentials.json',
            ]
          securityContext:
            runAsUser: 2 # non-root user
            allowPrivilegeEscalation: false
          volumeMounts:
            - name: cdn-config
              mountPath: /secrets/google/credentials.json
              readOnly: true
              subPath: credentials.json

      volumes:
        - name: cdn-config
          configMap:
            name: cdn-config
